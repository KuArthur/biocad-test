{"version":3,"sources":["components/DeviceInfo/DeviceInfo.js","img/success.svg","img/fail.svg","components/CalibrationReport/CalibrationReport.js","components/UnitName/UnitName.js","components/Button/Button.js","components/FilterDevices/FilterDevices.js","components/RadioButton/RadioButton.js","img/droplist-icon.svg","components/DropList/DropList.js","components/ReportFilters/ReportFilters.js","db/deviceInfo.js","App.js","reportWebVitals.js","index.js"],"names":["INFO_NAMES","translate","type","status","manufacturer","model","repairs","using","person","country","serial_number","guid","bims_id","tam","DeviceInfo","props","device","rows","map","specName","i","DeviceInfoRow","specificationName","className","classColor","includes","CalibrationReport","calibrationData","forEach","data","push","CalibrationReportRow","slope","offset","solution","src","fail","success","alt","user","UnitName","img","name","Button","value","FilterDevices","filterText","onSubmit","e","onDeviceChange","preventDefault","onChange","onFilterTextChange","target","RadioButton","text","checked","id","onChecked","for","DropList","options","useState","opened","setOpen","selected","setSelect","classMod","handleSelect","option","items","DropListMenuItem","onSelect","key","onClick","icon","INSCRIPTIONS","ReportFilters","setChecked","handleChecked","ratioButtons","inscription","deviceInfo","process","calibrationReport","App","defaultDevice","setFilterText","setDevice","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7f4a550.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './DeviceInfo.css';\r\n\r\nconst INFO_NAMES = ['type','status', 'manufacturer', 'model', 'repairs', 'using',\r\n                    'person','country','serial_number',\r\n                    'guid','bims_id','tam']\r\n\r\nconst translate = {\r\n    type: 'Тип оборудования',\r\n    status: 'Статус',\r\n    manufacturer: 'Изготовитель',\r\n    model: 'Модель',\r\n    repairs: 'Ответственное подразделение (ремонт)',\r\n    using: 'Эксплуатирующее подразделение',\r\n    person: 'МОЛ',\r\n    country: 'Территория',\r\n    serial_number: 'Серийный номер',\r\n    guid: 'GUID',\r\n    bims_id: 'Bims ID',\r\n    tam: 'Tam',\r\n}\r\n\r\nexport default function DeviceInfo(props) {\r\n    const device = props.device;\r\n    \r\n    const rows = INFO_NAMES.map((specName,i) => (\r\n         <DeviceInfoRow  device = {device[specName]}\r\n                                specificationName = {translate[specName]}\r\n                                key = {specName}\r\n                />\r\n    ))\r\n\r\n    return (\r\n        <div className = 'deviceInfo'>\r\n            {rows}\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DeviceInfoRow(props) {\r\n    const device = props.device\r\n    const specificationName = props.specificationName;\r\n\r\n    const classColor = ['GUID','Bims ID','Tam'].includes(specificationName) ? '-blue' : '';\r\n    return (\r\n        <div className = 'deviceInfo-row'>\r\n            <span className = 'deviceInfo-specName'>{specificationName}: </span>\r\n            <span className = {'deviceInfo-specification' +classColor}>{device}</span>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/success.c5fc0897.svg\";","export default __webpack_public_path__ + \"static/media/fail.9278c2b3.svg\";","import React from 'react';\r\n\r\nimport './CalibrationReport.css';\r\n\r\nimport success from '../../img/success.svg';\r\nimport fail from '../../img/fail.svg';\r\n\r\nexport default function CalibrationReport(props) {\r\n    const calibrationData = props.calibrationData;\r\n    const rows = [];\r\n    calibrationData.forEach((data,i) => (\r\n        rows.push(\r\n            <CalibrationReportRow   calibrationData = {data}\r\n                                    key = {i}\r\n             />\r\n        )\r\n    ))\r\n\r\n    return (\r\n        <div className = 'calibrationReport'>\r\n            \r\n            <div className = 'calibrationReport-body'>\r\n                <h3 className = 'calibrationReport-tableName'>Calibration report</h3>\r\n                <div className = 'calibrationReport-headers'>\r\n                    <div className = 'column-width-s'>Data</div>\r\n                    <div className = 'column-width-l'>Used buffer solutions</div>\r\n                    <div className = 'column-width-s'>Slope, % <br /> Norm 95-105</div>\r\n                    <div className = 'column-width-s'>Offset, mV <br /> Norm ±(0-20)</div>\r\n                    <div className = 'column-width-m'>User</div>\r\n                </div>\r\n                {rows}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction CalibrationReportRow(props) {\r\n    const calibrationData = props.calibrationData;\r\n    const slope = calibrationData.slope\r\n    const offset = calibrationData.offset\r\n    \r\n    return(\r\n        <div className = 'calibrationReport-row'>\r\n            <span className = 'calibrationReport-data column-width-s'>{calibrationData.data}</span>\r\n            <span className = 'calibrationReport-solution column-width-l'>{calibrationData.solution}</span>\r\n           \r\n            <div className = 'calibrationReport-slope column-width-s'>\r\n                <span>{slope}</span> \r\n                <img    src = {(slope < 95 || slope >= 105)  ? fail : success} alt = ''\r\n                        className = 'calibrationReport-icon'\r\n                />\r\n            </div>\r\n                \r\n            <div className = 'calibrationReport-offset column-width-s'>\r\n                <span>{offset}</span> \r\n                <img    src = {offset < - 1 || offset > 21 ? fail : success} alt = ''\r\n                        className = 'calibrationReport-icon'\r\n                />\r\n            </div>\r\n                   \r\n            <span className = 'calibrationReport-user column-width-m'>{calibrationData.user}</span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport \"./UnitName.css\";\r\n\r\nexport default function UnitName(props) {\r\n    const device = props.device;\r\n     const img = props.img;\r\n\r\n    return (\r\n        <div className = 'unitName'>\r\n            <img className = 'unitName-img' src = {img} alt = '' />\r\n            <span className = 'unitName-name'> {device.name} </span>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './Button.css'\r\n\r\nexport default function Button(props) {\r\n    return (\r\n        <input  type = 'submit'\r\n                className = {'button ' + props.className}\r\n                value = {props.value }\r\n        />\r\n    )\r\n}","import React from 'react';\r\n\r\nimport './FilterDevices.css';\r\n\r\nimport Button from '../Button/Button'\r\n\r\nexport default function FilterDevices(props) {\r\n    const filterText = props.filterText;\r\n    \r\n    function handleFilterTextChange(e) {\r\n        props.onFilterTextChange(e.target.value);\r\n        \r\n    }\r\n\r\n    function handleDeviceChange(e) {\r\n        props.onDeviceChange();\r\n        e.preventDefault()\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = {handleDeviceChange}>\r\n            \r\n            <div className = 'filterDevices'>\r\n                <div className = 'filterDevices-head'>Enter inventory number, guid or bims id</div>\r\n                <div className = 'filterDevices-wrap'>\r\n                    <input  type = 'text'\r\n                            value = {filterText}\r\n                            onChange = {handleFilterTextChange}\r\n                            className = 'filterDevices-input'\r\n                    />\r\n                    <Button className = 'filterDevices-button'\r\n                            value = 'Search'\r\n                    />\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n\r\n}","import React from 'react';\r\n\r\nimport './RadioButton.css';\r\n\r\nexport default function RadioButton(props) {\r\n    const {\r\n        text,\r\n        name,\r\n        checked\r\n    } = props\r\n\r\n    function handleChecked(e) {\r\n        props.onChecked(e.target.value)\r\n    }\r\n    \r\n    return (\r\n        <div className = 'radioButton'>\r\n            <input  type = 'radio'\r\n                    className = 'radioButton-input'\r\n                    id = {text}\r\n                    name= {name}\r\n                    checked = {checked}\r\n                    onChange = {handleChecked}\r\n                    value = {text}\r\n            />\r\n            <label className = 'radioButton-text' for={text}>{text}</label>\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/droplist-icon.e0ee23d5.svg\";","import React, {useState} from 'react';\r\n\r\nimport './DropList.css';\r\n\r\nimport icon from '../../img/droplist-icon.svg'\r\n\r\nexport default function DropList(props) {\r\n    const options = props.options;\r\n    \r\n    const [opened, setOpen] = useState(false);\r\n    const [selected,setSelect] = useState(options[0].value);\r\n\r\n    let classMod = opened ? 'show' : 'hide';\r\n\r\n    function handleOpen() {\r\n        setOpen(!opened)\r\n    }\r\n\r\n    function handleSelect(option) {\r\n        setSelect(option);\r\n        return setOpen(false)\r\n        \r\n    }\r\n\r\n    let items = options.map((option) => (\r\n        <DropListMenuItem   key = {option.key}\r\n                            option = {option}\r\n                            onSelect = {handleSelect}         \r\n        />\r\n    ))\r\n    \r\n    return (\r\n        <div className ='dropList'>\r\n            <div    className=\"dropList-input\"\r\n                    onClick = {handleOpen}\r\n            >\r\n               <span>{selected}</span>\r\n               <img src={icon} alt='' />\r\n            </div>\r\n            <ul className = {'dropList-menu--' + classMod}>\r\n                {items}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction DropListMenuItem(props) {\r\n    const option = props.option;\r\n\r\n    function handleSelect() {\r\n       return props.onSelect(option.value)\r\n    }\r\n\r\n    return (\r\n        <li className = 'dropList-item' onClick = {handleSelect}>{option.value}</li>\r\n    )\r\n}","import React, {useState} from 'react';\r\n\r\nimport RadioButton from '../RadioButton/RadioButton';\r\nimport Button from '../Button/Button';\r\nimport DropList from '../DropList/DropList';\r\n\r\nimport './ReportFilters.css';\r\n\r\nconst INSCRIPTIONS = ['Calibration','Measuring','Using'];\r\n\r\nconst options = [              \r\n    {key: 1, value: '1 month'},\r\n    {key: 2, value: '2 month'},\r\n    {key: 3, value: '3 month'},\r\n    {key: 4, value: '4 month'}\r\n]\r\n\r\nexport default function ReportFilters(props) {\r\n    const [checked, setChecked] = useState(INSCRIPTIONS[0]);\r\n\r\n    function handleChecked(value) {\r\n        setChecked(value);\r\n    }\r\n\r\n    const ratioButtons = [];\r\n    \r\n    INSCRIPTIONS.forEach((inscription,i) => (\r\n        ratioButtons.push(<RadioButton  text = {inscription}\r\n                                        name = 'ReportFilters' \r\n                                        key = {inscription + i}\r\n                                        checked = {checked === inscription}\r\n                                        onChecked = {handleChecked}\r\n                                        value= {inscription === 'Calibration' ? 'Calibration' : inscription }\r\n                          />\r\n        )\r\n    ))\r\n\r\n    return (\r\n        <div className = 'reportFilters'>\r\n            <div className = 'reportFilters-dropList'>\r\n                <DropList options = {options} />\r\n            </div>\r\n            \r\n            <div className = 'reportFilters-ratioButtons'>\r\n                {ratioButtons}\r\n            </div>\r\n            \r\n            <Button className = 'reportFilters-button'\r\n                    value = 'Generate report'\r\n            />\r\n        </div>\r\n    )\r\n}","export const deviceInfo = [\r\n    {\r\n        type: 'Весы',\r\n        name: 'Аналитические весы OHAUS Adventurer АХ324 (B715976163)',\r\n        status: 'Готов к работе',\r\n        manufacturer: 'Ohaus',\r\n        model: 'AX-123',\r\n        repairs: 'Группа обслуживания лабораторного оборудования',\r\n        using: 'Химико-аналитическая лаборатория 2.0',\r\n        person: 'Иванов Иван Иванович',\r\n        country: 'г. Санкт-Петербург (Нойдорф)',\r\n        serial_number: 'B715976163',\r\n        guid: '508b2a71-662e-4983-ae0c-3cb0c1cd21c5',\r\n        bims_id: '49db8db1-585f-4b9e-bbf0-8a59698edc8b',\r\n        tam: 'А-001234',\r\n        img: process.env.PUBLIC_URL +'/img/item1.svg',\r\n        calibrationReport: [\r\n            {\r\n                data: '04.10.19 10:23',\r\n                solution: 'В1 : № 2000460789536: pH 1.09 В2: № 2000460789536: pH 2.00 В3: № 2000460789536: pH 4.01 В4: № 2000460789536: pH 7.00 В5: № 2000460789536: pH 9.21',\r\n                slope: 98.7,\r\n                offset: -0.3,\r\n                user: 'Иванов Генадий Петрович'\r\n            },\r\n            {\r\n                data: '04.10.19 10:23',\r\n                solution: 'В1 : № 2000460789536: pH 1.09 В2: № 2000460789536: pH 2.00 В3: № 2000460789536: pH 4.01 В4: № 2000460789536: pH 7.00 В5: № 2000460789536: pH 9.21',\r\n                slope: 98.7,\r\n                offset: -0.3,\r\n                user: 'Петров Иван Генадьевич'\r\n            },\r\n            {\r\n                data: '04.10.19 10:23',\r\n                solution: 'В1 : № 2000460789536: pH 1.09 В2: № 2000460789536: pH 2.00 В3: № 2000460789536: pH 4.01 В4: № 2000460789536: pH 7.00 В5: № 2000460789536: pH 9.21',\r\n                slope: 98.7,\r\n                offset: -0.3,\r\n                user: 'Петров Генадий Иванович'\r\n            },\r\n            {\r\n                data: '04.10.19 10:23',\r\n                solution: 'В1 : № 2000460789536: pH 1.09 В2: № 2000460789536: pH 2.00 В3: № 2000460789536: pH 4.01 В4: № 2000460789536: pH 7.00 В5: № 2000460789536: pH 9.21',\r\n                slope: 90.1,\r\n                offset: -0.5,\r\n                user: 'Генадьев Иван Петрович'\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        type: 'Весы',\r\n        name: 'Аналитические весы другие весы (B123456789)',\r\n        status: 'статус',\r\n        manufacturer: 'Другие',\r\n        model: 'Другая',\r\n        repairs: 'Группа обслуживания лабораторного оборудования',\r\n        using: 'Химико-аналитическая лаборатория 3.456',\r\n        person: 'Петров Петр Петрович',\r\n        country: 'г. Москва (другая)',\r\n        serial_number: 'B123456789',\r\n        guid: '508b2a71-613e-4423-ae53-7770c1cd55cxxz',\r\n        bims_id: '111111-2222-3333-4444-12345678911223',\r\n        tam: 'А-005678',\r\n        img: process.env.PUBLIC_URL +'/img/item2.svg',\r\n        calibrationReport: [\r\n            {\r\n                data: '05.10.20 11:56',\r\n                solution: 'В1 : № 2000460789536: pH 1.09 В2: № 2000460789536: pH 2.00 В3: № 2000460789536: pH 4.01 В4: № 2000460789536: pH 7.00 В5: № 2000460789536: pH 9.21',\r\n                slope: 98.7,\r\n                offset: -0.3,\r\n                user: 'Иванов Генадий Петрович'\r\n            },\r\n            {\r\n                data: '05.10.20 11:56',\r\n                solution: 'В1 : № 2000460789536: pH 1.09 В2: № 2000460789536: pH 2.00 В3: № 2000460789536: pH 4.01 В4: № 2000460789536: pH 7.00 В5: № 2000460789536: pH 9.21',\r\n                slope: 89.7,\r\n                offset: -1.1,\r\n                user: 'Петров Иван Генадьевич'\r\n            },\r\n            {\r\n                data: '05.10.20 11:56',\r\n                solution: 'В1 : № 2000460789536: pH 1.09 В2: № 2000460789536: pH 2.00 В3: № 2000460789536: pH 4.01 В4: № 2000460789536: pH 7.00 В5: № 2000460789536: pH 9.21',\r\n                slope: 91.7,\r\n                offset: -0.3,\r\n                user: 'Петров Генадий Иванович'\r\n            },\r\n            {\r\n                data: '05.10.20 11:56',\r\n                solution: 'В1 : № 2000460789536: pH 1.09 В2: № 2000460789536: pH 2.00 В3: № 2000460789536: pH 4.01 В4: № 2000460789536: pH 7.00 В5: № 2000460789536: pH 9.21',\r\n                slope: 90.1,\r\n                offset: -0.5,\r\n                user: 'Генадьев Иван Петрович'\r\n            }\r\n        ]\r\n    }\r\n]","import React, { useState } from 'react';\n\nimport './App.css';\n\nimport DeviceInfo from './components/DeviceInfo/DeviceInfo'\nimport CalibrationReport from './components/CalibrationReport/CalibrationReport';\nimport UnitName from './components/UnitName/UnitName';\nimport FilterDevices from './components/FilterDevices/FilterDevices';\n\nimport ReportFilters from './components/ReportFilters/ReportFilters';\n\nimport { deviceInfo } from './db/deviceInfo';\n\nfunction App() {\n  const defaultDevice = deviceInfo[0];\n  const [filterText, setFilterText] = useState(defaultDevice.tam);\n  const [device, setDevice] = useState(defaultDevice);\n\n  function handleFilterTextChange(filterText) {\n    setFilterText(filterText)\n  }\n\n  function handleDeviceChange(e) {\n    for (let device of deviceInfo) {\n      if ([device.tam,device.guid,device.bims_id].includes(filterText)) {\n        setDevice(device);\n      }\n    }\n  }\n\n  return (\n    <div className = 'app'>\n      <div className = 'app-top'>\n        <div className = 'app-leftColumn'>\n          <div className = 'app-filterDevices'>\n          <FilterDevices  filterText = {filterText}\n                          onFilterTextChange = {handleFilterTextChange}\n                          onDeviceChange = {handleDeviceChange}\n          />\n          </div>\n          <div className = 'app-unitName'>\n            <UnitName device = {device}\n                      img = {device.img}\n            />\n          </div>\n          <ReportFilters />\n        </div>\n        <div className = 'app-rightColumn'>\n          <DeviceInfo device ={device} />\n        </div>\n      </div>\n      <div className = 'app-bottom'>\n        <CalibrationReport calibrationData = {device.calibrationReport} />\n      </div>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}